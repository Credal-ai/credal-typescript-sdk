/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Credal from "../../../../api/index";
import * as core from "../../../../core";
import { MessageReply } from "./MessageReply";
import { MessageBlocked } from "./MessageBlocked";

export const SendMessageResponse: core.serialization.Schema<
    serializers.SendMessageResponse.Raw,
    Credal.SendMessageResponse
> = core.serialization
    .union("type", {
        ai_response_result: MessageReply,
        blocked_result: MessageBlocked,
    })
    .transform<Credal.SendMessageResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace SendMessageResponse {
    export type Raw = SendMessageResponse.AiResponseResult | SendMessageResponse.BlockedResult;

    export interface AiResponseResult extends MessageReply.Raw {
        type: "ai_response_result";
    }

    export interface BlockedResult extends MessageBlocked.Raw {
        type: "blocked_result";
    }
}
