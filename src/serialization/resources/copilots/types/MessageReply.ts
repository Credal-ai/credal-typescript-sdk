/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Credal from "../../../../api/index";
import * as core from "../../../../core";
import { PolicyTrigger } from "./PolicyTrigger";
import { ResponseChunk } from "./ResponseChunk";
import { InsertedAuditLog } from "./InsertedAuditLog";
import { ReferencedSource } from "./ReferencedSource";
import { WebSearchResult } from "./WebSearchResult";

export const MessageReply: core.serialization.ObjectSchema<serializers.MessageReply.Raw, Credal.MessageReply> =
    core.serialization.object({
        policyTriggers: core.serialization.property("policy_triggers", core.serialization.list(PolicyTrigger)),
        conversationId: core.serialization.string(),
        response: ResponseChunk,
        warnings: core.serialization.list(core.serialization.string()),
        insertedAuditLog: core.serialization.property("inserted_audit_log", InsertedAuditLog),
        referencedSources: core.serialization.list(ReferencedSource),
        sourcesInDataContext: core.serialization.list(ReferencedSource),
        webSearchResults: core.serialization.list(WebSearchResult),
        messageId: core.serialization.string(),
    });

export declare namespace MessageReply {
    interface Raw {
        policy_triggers: PolicyTrigger.Raw[];
        conversationId: string;
        response: ResponseChunk.Raw;
        warnings: string[];
        inserted_audit_log: InsertedAuditLog.Raw;
        referencedSources: ReferencedSource.Raw[];
        sourcesInDataContext: ReferencedSource.Raw[];
        webSearchResults: WebSearchResult.Raw[];
        messageId: string;
    }
}
