/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Credal from "../../../../../api/index";
import * as core from "../../../../../core";
import { SingleFieldFilter } from "../../types/SingleFieldFilter";
import { DocumentCollectionSearchOptions } from "../../types/DocumentCollectionSearchOptions";

export const SearchDocumentCollectionRequest: core.serialization.Schema<
    serializers.SearchDocumentCollectionRequest.Raw,
    Credal.SearchDocumentCollectionRequest
> = core.serialization.object({
    collectionId: core.serialization.string(),
    searchQuery: core.serialization.string(),
    userEmail: core.serialization.string(),
    structuredQueryFilters: core.serialization.list(SingleFieldFilter).optional(),
    searchOptions: DocumentCollectionSearchOptions.optional(),
    metadataFilterExpression: core.serialization.string().optional(),
});

export declare namespace SearchDocumentCollectionRequest {
    interface Raw {
        collectionId: string;
        searchQuery: string;
        userEmail: string;
        structuredQueryFilters?: SingleFieldFilter.Raw[] | null;
        searchOptions?: DocumentCollectionSearchOptions.Raw | null;
        metadataFilterExpression?: string | null;
    }
}
