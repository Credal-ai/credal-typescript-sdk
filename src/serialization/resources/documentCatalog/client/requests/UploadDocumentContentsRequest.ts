/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Credal from "../../../../../api/index";
import * as core from "../../../../../core";

export const UploadDocumentContentsRequest: core.serialization.Schema<
    serializers.UploadDocumentContentsRequest.Raw,
    Credal.UploadDocumentContentsRequest
> = core.serialization.object({
    documentName: core.serialization.string(),
    documentContents: core.serialization.string(),
    allowedUsersEmailAddresses: core.serialization.list(core.serialization.string()),
    uploadAsUserEmail: core.serialization.string(),
    documentExternalId: core.serialization.string(),
    documentExternalUrl: core.serialization.string().optional(),
    customMetadata: core.serialization.unknown().optional(),
    collectionId: core.serialization.string().optional(),
    forceUpdate: core.serialization.boolean().optional(),
    internalPublic: core.serialization.boolean().optional(),
});

export declare namespace UploadDocumentContentsRequest {
    interface Raw {
        documentName: string;
        documentContents: string;
        allowedUsersEmailAddresses: string[];
        uploadAsUserEmail: string;
        documentExternalId: string;
        documentExternalUrl?: string | null;
        customMetadata?: unknown | null;
        collectionId?: string | null;
        forceUpdate?: boolean | null;
        internalPublic?: boolean | null;
    }
}
