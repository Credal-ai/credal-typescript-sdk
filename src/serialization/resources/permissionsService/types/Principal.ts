/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Credal from "../../../../api/index";
import * as core from "../../../../core";
import { Group } from "./Group";
import { User } from "./User";

export const Principal: core.serialization.Schema<serializers.Principal.Raw, Credal.Principal> = core.serialization
    .union("type", {
        group: Group,
        user: User,
    })
    .transform<Credal.Principal>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Principal {
    type Raw = Principal.Group | Principal.User;

    interface Group extends Group.Raw {
        type: "group";
    }

    interface User extends User.Raw {
        type: "user";
    }
}
